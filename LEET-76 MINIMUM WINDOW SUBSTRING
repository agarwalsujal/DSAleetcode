class Solution {
    public String minWindow(String s, String t) {
        if(t.length()>s.length() || t.length() ==0 || s.length()==0)
        return "";
        Map<Character,Integer> set=new HashMap<>();
        Map<Character,Integer> set2=new HashMap<>();
        for(int i=0;i<t.length();i++){
            set.put(t.charAt(i),set.getOrDefault(t.charAt(i),0)+1);
        }
        int count =0;
        int l=0;
        int required = set.size();
        int min=s.length()+1;
        int minlen=0;
        for(int r=0;r<s.length();r++){
            char c=s.charAt(r);
            int times=set2.getOrDefault(c,0);
            set2.put(c,times+1);
            if(set.containsKey(c) && set.get(c).intValue()== set2.get(c).intValue())
            count++;
            while( l<=r && count == required){
              if(min> r-l+1 ){
              min=r-l+1;
              minlen=l;
              }
              c=s.charAt(l);
               set2.put(c, set2.get(c) - 1);
              if(set.containsKey(c) && set.get(c).intValue()> set2.get(c).intValue())
              count--;
              l++;
            }

        }
        return min ==s.length()+1 ?"":s.substring(minlen,minlen+min);

    }
}
