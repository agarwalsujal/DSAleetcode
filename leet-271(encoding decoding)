class Solution {

    public String encode(List<String> strs) {
//   int n=strs.size();
//  int i=0;
  String m="";
//   while(i<n){
//     String l=strs.get(i);
//      int a=l.length();
//      m=m+a+"#"+l;
//    i++;
//   }
  for(String s : strs){
    m=m+s.length()+"#"+s;
  }
  return m;
    }

    public List<String> decode(String str) {
      int l=str.length();
      int i=0;
        int c=0;
      List<String> strs=new ArrayList<>();
      while(i<l){
      
       if(str.charAt(i)=='#')
       {
        int d=Integer.parseInt(str.substring(i-c,i));
      String sub=str.substring(i+1,i+d+1);
        strs.add(sub);
        i+=d+1;
        c=0;
       }
       else{
        c++;
        i++;
       }
        
      }
      return strs;
    }
}







































//Leetcode Link: https://leetcode.com/problems/encode-and-decode-strings/
//Youtube Link: 

public class Codec {

    // Encodes a list of strings to a single string.
    public String encode(List<String> strs) {
        
        if(strs.size()==0 ){
            return Character.toString((char)258);
        }
        String separate = Character.toString((char)257);
        StringBuilder sb = new StringBuilder();
        for(String s:strs){
            sb.append(s);
            sb.append(separate);
        }
        sb.deleteCharAt(sb.length()-1);
        return sb.toString();
        
    }

    // Decodes a single string to a list of strings.
    public List<String> decode(String s) {
        
        if(s.equals(Character.toString((char)258))){
            return new ArrayList();
        }
        
       String separate = Character.toString((char)257);
        
         return Arrays.asList(s.split(separate, -1));
    }
}

// Your Codec object will be instantiated and called as such:
// Codec codec = new Codec();
// codec.decode(codec.encode(strs));
